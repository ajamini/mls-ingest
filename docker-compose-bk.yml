version: '3'
services:
    postgres:
        image: postgres:13
        environment:
            - PGUSER=airflow
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow2
        volumes:
            - .postgresql/:/var/lib/postgresql/data
        ports:
            - "5433:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready" ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: 'redis:5.0.5'
        ports:
            - "6379:6379"

    webserver:
        build: .
        restart: always
        depends_on:
            - postgres
            - redis
        environment:
            - _AIRFLOW_WWW_USER_CREATE=True
            - _AIRFLOW_WWW_USER_USERNAME=admin
            - _AIRFLOW_WWW_USER_PASSWORD=admin
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
            - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
            - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
        volumes:
            - ./src/dags:/opt/airflow/dags
        command: webserver
        ports:
            - "8080:8080"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080"]
            interval: 10s
            timeout: 5s
            retries: 5

    scheduler:
        build: .
        restart: always
        depends_on:
            - webserver
        environment:
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
            - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
            - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
        volumes:
            - ./src/dags:/opt/airflow/dags
        command: scheduler

    worker:
        build: .
        restart: always
        depends_on:
            - scheduler
        environment:
            - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
            - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
            - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
        volumes:
            - ./src/dags:/opt/airflow/dags
        command: celery worker
